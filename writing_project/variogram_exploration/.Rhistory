plot(amacrine, quiet = TRUE)
require(spdep)
require(xtable)
require(knitr)
opts_chunk$set(echo = FALSE, cache = FALSE, message = FALSE,
comment = NA, size = 'footnotesize', width = 80, dev = 'pdf',
dev.args = list(family = 'Palatino', pointsize = 11),
fig.path = 'figure/', cache.path = 'cache/',
fig.align = 'center', fig.height = 4, fig.width = 8,
show.signif.stars = FALSE)
options(show.signif.stars = FALSE)
# simulating variograms reference
# http://www.stat.purdue.edu/~zhanghao/ASS/homework/Project%201.pdf
# another source for the future
# http://www.biostat.umn.edu/~brad/8472/slidegeoR.pdf
require(geoR)
require(MASS) #mvrnorm
data("ca20")
ca <- ca20
# empirical variograms
ca_vc <- variog(ca, coords = ca$coords, data = ca$data, estimator.type = c("classical"))
ca_vm <- variog(ca, coords = ca$coords, data = ca$data, estimator.type = "modulus")
par(mfrow=c(1,2))
plot(ca_vc, main = "Classical Emprical")
# robust against outliers (Cressie's)
plot(ca_vm, main = "Modulus/Robust Empirical")
# kenny - issue with variogram is that use many points over again
# theoretically if outlier, showing up many times, for each pairwise distance
# so gotway suggests weighted gls to adjust, but still problem
# simulating from different correlation functions
linear_cor <- function(t,tau2,sigma2){
I <- diag(1, nrow = dim(as.matrix(t))[1], ncol = dim(as.matrix(t))[2])
nonspat_var <- tau2*I
ifelse(t > 0,
spat_var <- sigma2*as.matrix(t), spat_var <- 0)
out <- nonspat_var + spat_var
return(out)
}
linearV <- linear_cor(t = dist(ca$data), tau2 = 9, sigma2 = 0.1)
set.seed(25)
linearZ <- mvrnorm(mu = rep(0,dim(linearV)[1]), Sigma = linearV)
spherical_cor <- function(t,tau2,sigma2,phi){
I <- diag(1, nrow = dim(as.matrix(t))[1], ncol =
dim(as.matrix(t))[2])
nonspat_var <- tau2*I
spat_var <- ifelse(t<0, 0, ifelse(t >= (1/phi),
sigma2,sigma2*(1.5*phi*as.matrix(t) -
0.5*(phi*as.matrix(t))^3)))
spat_var <- as.matrix(spat_var)
out <- nonspat_var + spat_var
return(out)
}
gauss_cor <- function(t,tau2,sigma2,phi){
I <- diag(1, nrow = dim(as.matrix(t))[1], ncol = dim(as.matrix(t))[2])
nonspat_var <- tau2*I
spat_var <- ifelse(as.matrix(t) > 0,
sigma2*(1-exp(-phi^2*as.matrix(t)%*%t(as.matrix(t)))),0)
spat_var <- as.matrix(spat_var)
out <- nonspat_var + spat_var
return(out)
}
gaussV <- gauss_cor(t = dist(ca$data), tau2 = 9, sigma2 = 0.1, phi = 2)
set.seed(25)
gaussZ <- mvrnorm(mu = rep(0,dim(gaussV)[1]), Sigma = gaussV)
exp_cor <- function(t,tau2,sigma2,phi){
I <- diag(1, nrow = dim(as.matrix(t))[1], ncol = dim(as.matrix(t))[2])
nonspat_var <- as.matrix(tau2*I, nrow = dim(as.matrix(t))[1], ncol = dim(as.matrix(t))[2])
spat_var <- ifelse(as.matrix(t) > 0,
sigma2*(1-exp(-phi*as.matrix(t))), 0)
spat_var <- as.matrix(spat_var)
out <- nonspat_var + spat_var
return(out)
}
expV <- exp_cor(t = dist(ca$data), tau2 = 9, sigma2 = 0.1, phi = 2)
set.seed(25)
expZ <- mvrnorm(mu = rep(0,dim(expV)[1]), Sigma = expV)
## No cov
I <- diag(1, nrow = dim(as.matrix(dist(ca$data)))[1], ncol = dim(as.matrix(dist(ca$data)))[2])
Z <- mvrnorm(mu = rep(0,dim(as.matrix(dist(ca$data)))[1]), Sigma = 9*I)
## plot
par(mfrow=c(1,2))
plot(variog(data = linearZ, coords = ca$coords), main = "S2 = 0.1 Linear Cov")
#plot(variog(data = spherZ, coords = ca$coords), main = "S2 = 0.1 Spherical Cov")
plot(variog(data = gaussZ, coords = ca$coords), main = "S2 = 0.1 Gaussian Cov")
plot(variog(data = expZ, coords = ca$coords), main = "S2 = 0.1 Exponential Cov")
#plot(variog(data = maternZ, coords = ca$coords), main = "S2 = 0.1 Matern Cov")
plot(variog(data = Z, coords = ca$coords), main = "S2 = 0 No Cov")
# fractional sigma2, doesn't have much affect
# change sigma2
sigma2_vec <- c(0.9,1,2,8)
n <- length(ca$data)
linearV <- array(0,c(n,n,length(sigma2_vec)))
for(i in 1:length(sigma2_vec)){
linearV[,,i] <- linear_cor(t = dist(ca$data), tau2 = 9, sigma2 = sigma2_vec[i])
}
set.seed(25)
linearZ <- array(0,c(n,n,length(sigma2_vec)))
for(i in 1:length(sigma2_vec)){
linearZ[,,i] <- mvrnorm(mu = rep(0,dim(linearV)[1]), Sigma = linearV[,,i])
}
gaussV <- array(0,c(n,n,length(sigma2_vec)))
for(i in 1:length(sigma2_vec)){
gaussV[,,i] <- gauss_cor(t = dist(ca$data), tau2 = 9, sigma2 = sigma2_vec[i], phi=2)
}
set.seed(25)
gaussZ <- array(0,c(n,n,length(sigma2_vec)))
for(i in 1:length(sigma2_vec)){
gaussZ[,,i] <- mvrnorm(mu = rep(0,dim(gaussV)[1]), Sigma = as.matrix(gaussV[,,i]))
}
expV <- array(0,c(n,n,length(sigma2_vec)))
for(i in 1:length(sigma2_vec)){
expV[,,i] <- exp_cor(t = dist(ca$data), tau2 = 9, sigma2 = sigma2_vec[i], phi=2)
}
set.seed(25)
expZ <- array(0,c(n,n,length(sigma2_vec)))
for(i in 1:length(sigma2_vec)){
expZ[,,i] <- mvrnorm(mu = rep(0,dim(expV)[1]), Sigma = expV[,,i])
}
sed.full <- read.csv("SEDataForAnalysisSpSurveyFinal.csv")
setwd("~/Documents/alm0823_hub/writing_project_s17/writing_project/variogram_exploration")
sed.full <- read.csv("SEDataForAnalysisSpSurveyFinal.csv")
se.cols <- c("siteID", "xcoord", "ycoord", "mdcaty.x", "Date_", "Acres", "Hectares",
"SeSed", "SeRoots", "SeWater", "SeBugs")
sed <- sed.full[,se.cols]
sed.geo <- as.geodata(obj = sed, coords.col = c(2,3),
data.col = c(8:11), covar.col = c(1,4,5,6,7),
na.action = "none")
summary(sed.geo)
dim(sed)#328 unique locations
sed.dist <- as.matrix(dist(sed$xcoord), nrow = dim(sed)[1], ncol = dim(sed)[2])
boxplot(dist(sed$xcoord))
boxplot(dist(sed$ycoord))
str(sed)
sed.geo <- as.geodata(obj = sed, coords.col = c(2,3),
data.col = c(8:11), covar.col = c(1,4,5,6,7),
na.action = "none")
summary(sed.geo)
str(sed.geo)
I <- diag(1, nrow = dim(as.matrix(dist(sed.geo$data)))[1], ncol = dim(as.matrix(dist(ca$data)))[2])
Z <- mvrnorm(mu = rep(0,dim(as.matrix(dist(sed.geo$data)))[1]), Sigma = 9*I)
dim(as.matrix(dist(sed.geo$data)))[1]
dim(I)
I <- diag(1, nrow = dim(as.matrix(dist(sed.geo$data)))[1], ncol = dim(as.matrix(dist(sed.geo$data)))[2])
Z <- mvrnorm(mu = rep(0,dim(as.matrix(dist(sed.geo$data)))[1]), Sigma = 9*I)
plot(variog(data = Z.se, coords = sed.geo$coords), main = "SE no Cov")
Z.se <- mvrnorm(mu = rep(0,dim(as.matrix(dist(sed.geo$data)))[1]), Sigma = 9*I)
plot(variog(data = Z.se, coords = sed.geo$coords), main = "SE no Cov")
n <- length(sed.geo$data)
sigma2_vec <- c(0.9,1,2,8)
linearV <- array(0,c(n,n,length(sigma2_vec)))
linearV <- array(0,c(n,n,length(sigma2_vec)))
for(i in 1:length(sigma2_vec)){
linearV[,,i] <- linear_cor(t = dist(sed.geo$data), tau2 = 9, sigma2 = sigma2_vec[i])
}
set.seed(25)
linearZ <- array(0,c(n,n,length(sigma2_vec)))
for(i in 1:length(sigma2_vec)){
linearZ[,,i] <- mvrnorm(mu = rep(0,dim(linearV)[1]), Sigma = linearV[,,i])
}
linearV[,,1]
linearV[1:5,1:5,1]
dist(sed.geo$data)
dist(sed.geo$coords)
dist(sed.geo$coords)[1:5,1:5]
dist(sed.geo$coords)[1:5]
sigma2_vec <- c(0.9,1,2,8)
n <- length(sed.geo$data)
linearV <- array(0,c(n,n,length(sigma2_vec)))
for(i in 1:length(sigma2_vec)){
linearV[,,i] <- linear_cor(t = dist(sed.geo$coords), tau2 = 9, sigma2 = sigma2_vec[i])
}
set.seed(25)
linearZ <- array(0,c(n,n,length(sigma2_vec)))
for(i in 1:length(sigma2_vec)){
linearZ[,,i] <- mvrnorm(mu = rep(0,dim(linearV)[1]), Sigma = linearV[,,i])
}
plot(variog(data = gaussZ, coords = ca$coords), main = "S2 = 0.1 Gaussian Cov")
plot(variog(data = linearZ[,,1], coords = ca$coords), main = "Linear Cov")
linearV <- array(0,c(n,n,length(sigma2_vec)))
for(i in 1:length(sigma2_vec)){
linearV[,,i] <- linear_cor(t = dist(sed.geo$coords), tau2 = 9, sigma2 = sigma2_vec[i])
}
set.seed(25)
linearZ <- array(0,c(n,n,length(sigma2_vec)))
for(i in 1:length(sigma2_vec)){
linearZ[,,i] <- mvrnorm(mu = rep(0,dim(linearV)[1]), Sigma = linearV[,,i])
}
plot(variog(data = linearZ[,,1], coords = ca$coords), main = "Linear Cov")
dim(linearV[,,1])
plot(variog(data = linearZ[,,1], coords = sed.geo$coords), main = "Linear Cov")
length(sigma2_vec)
dim(linearV)[1])
dim(linearV)[1]
n <- length(sed.geo$data)
n
sed.geo$data
n <- length(sed.geo$data[,1])
linearV <- array(0,c(n,n,length(sigma2_vec)))
for(i in 1:length(sigma2_vec)){
linearV[,,i] <- linear_cor(t = dist(sed.geo$coords), tau2 = 9, sigma2 = sigma2_vec[i])
}
set.seed(25)
linearZ <- array(0,c(n,n,length(sigma2_vec)))
for(i in 1:length(sigma2_vec)){
linearZ[,,i] <- mvrnorm(mu = rep(0,dim(linearV)[1]), Sigma = linearV[,,i])
}
plot(variog(data = linearZ[,,1], coords = sed.geo$coords), main = "Linear Cov")
linearZ[,,1]
dim(linearZ[,,1])
set.seed(25)
linearZ <- array(0,c(n,n,length(sigma2_vec)))
for(i in 1:length(sigma2_vec)){
linearZ[,,i] <- mvrnorm(mu = rep(0,dim(linearV)[1]), Sigma = linearV[,,i])
}
plot(variog(data = linearZ[,,1], coords = sed.geo$coords), main = "Linear Cov")
linearV[,,2]
linearV <- array(0,c(n,n,length(sigma2_vec)))
for(i in 1:length(sigma2_vec)){
linearV[,,i] <- linear_cor(t = dist(sed.geo$coords), tau2 = 1.5, sigma2 = sigma2_vec[i])
}
set.seed(25)
linearZ <- array(0,c(n,n,length(sigma2_vec)))
for(i in 1:length(sigma2_vec)){
linearZ[,,i] <- mvrnorm(mu = rep(0,dim(linearV)[1]), Sigma = linearV[,,i])
}
sigma2_vec <- c(0.2,1,2,8)
n <- length(sed.geo$data[,1])
linearV <- array(0,c(n,n,length(sigma2_vec)))
for(i in 1:length(sigma2_vec)){
linearV[,,i] <- linear_cor(t = dist(sed.geo$coords), tau2 = 1.5, sigma2 = sigma2_vec[i])
}
set.seed(25)
linearZ <- array(0,c(n,n,length(sigma2_vec)))
for(i in 1:length(sigma2_vec)){
linearZ[,,i] <- mvrnorm(mu = rep(0,dim(linearV)[1]), Sigma = linearV[,,i])
}
linearZ[,,1] <- mvrnorm(mu = rep(0,dim(linearV)[1]), Sigma = linearV[,,1])
s <- 1
linearV <- NULL
dist(sed.geo$coords)
AS.MATRIX(dist(sed.geo$coords))
as.matrix(dist(sed.geo$coords))
linearV <- linear_cor(t = as.matrix(dist(sed.geo$coords)), tau2 = 1.5, sigma2 = s)
mvrnorm(mu = rep(0,dim(linearV)[1]), Sigma = linearV)
sigma2_vec <- c(0.2,1,2,8)
n <- length(sed.geo$data[,1])
linearV <- array(0,c(n,n,length(sigma2_vec)))
for(i in 1:length(sigma2_vec)){
linearV[,,i] <- linear_cor(t = as.matrix(dist(sed.geo$coords)), tau2 = 1.5, sigma2 = sigma2_vec[i])
}
set.seed(25)
linearZ <- NULL
linearZ <- array(0,c(n,n,length(sigma2_vec)))
for(i in 1:length(sigma2_vec)){
linearZ[,,i] <- mvrnorm(mu = rep(0,dim(linearV)[1]), Sigma = linearV[,,i])
}
n <- length(sed.geo$data[,1])
}
linearZ <- NULL
for(i in 1:length(sigma2_vec)){
}
linearV <- array(0,c(n,n,length(sigma2_vec)))
linearV[,,i] <- linear_cor(t = as.matrix(dist(sed.geo$coords)), tau2 = 1.5, sigma2 = sigma2_vec[i])
linearZ <- array(0,c(n,n,length(sigma2_vec)))
plot(variog(data = linearZ[,,1], coords = sed.geo$coords), main = "Linear Cov")
set.seed(25)
sigma2_vec <- c(0,0.5,1,2,8)
linearZ[,,i] <- mvrnorm(mu = rep(0,dim(linearV)[1]), Sigma = linearV[,,i])
for(i in 1:length(sigma2_vec)){
par(mfrow=c(1,1))
plot(variog(data = linearZ[,,1], coords = sed.geo$coords), main = "Linear Cov")
}
par(mfrow=c(1,1))
plot(variog(data = linearZ[,,1], coords = sed.geo$coords), main = "Linear Cov")
for(i in 1:length(sigma2_vec)){
linearZ[,,i] <- mvrnorm(mu = rep(0,dim(linearV)[1]^2), Sigma = linearV[,,i])
}
?mvrnorm
set.seed(25)
linearZ <- NULL
linearZ <- array(0,c(n,n,length(sigma2_vec)))
for(i in 1:length(sigma2_vec)){
linearZ[,,i] <- mvrnorm(mu = rep(0,dim(linearV)[1]), Sigma = linearV[,,i])
}
Sigma <- matrix(c(10,3,3,2),2,2)
Sigma
mvrnorm(n = 1000, rep(0, 2), Sigma)
linearV <- array(0,c(n,n,length(sigma2_vec)))
for(i in 1:length(sigma2_vec)){
linearV[,,i] <- linear_cor(t = as.matrix(dist(sed.geo$coords)), tau2 = 1.5, sigma2 = sigma2_vec[i])
}
set.seed(25)
linearZ <- NULL
linearZ <- array(0,c(n,length(sigma2_vec)))
for(i in 1:length(sigma2_vec)){
linearZ[,i] <- mvrnorm(mu = rep(0,dim(linearV)[1]), Sigma = linearV[,,i])
}
par(mfrow=c(1,1))
plot(variog(data = linearZ[,,1], coords = sed.geo$coords), main = "Linear Cov")
plot(variog(data = linearZ[,1], coords = sed.geo$coords), main = "Linear Cov")
plot(variog(data = linearZ[,2], coords = sed.geo$coords), main = "Linear Cov")
plot(variog(data = linearZ[,3], coords = sed.geo$coords), main = "Linear Cov")
plot(variog(data = linearZ[,4], coords = sed.geo$coords), main = "Linear Cov")
plot(variog(data = linearZ[,5], coords = sed.geo$coords), main = "Linear Cov")
gaussV <- array(0,c(n,n,length(sigma2_vec)))
plot(variog(data = linearZ[,1], coords = sed.geo$coords), main = paste("Linear Cov", "Sigma^2 =", sigma2_vec[1]))
gaussV <- array(0,c(n,n,length(sigma2_vec)))
for(i in 1:length(sigma2_vec)){
gaussV[,,i] <- gauss_cor(t = as.matrix(dist(sed.geo$data)), tau2 = 9, sigma2 = sigma2_vec[i], phi=2)
}
set.seed(25)
gaussZ <- array(0,c(n,length(sigma2_vec)))
for(i in 1:length(sigma2_vec)){
gaussZ[,,i] <- mvrnorm(mu = rep(0,dim(gaussV)[1]), Sigma = as.matrix(gaussV[,,i]))
}
set.seed(25)
gaussZ <- array(0,c(n,length(sigma2_vec)))
for(i in 1:length(sigma2_vec)){
gaussZ[,i] <- mvrnorm(mu = rep(0,dim(gaussV)[1]), Sigma = as.matrix(gaussV[,,i]))
}
par(mfrow=c(1,2))
for(i in 1:length(sigma2_vec)){
plot(variog(data = gaussZ[,i], coords = sed.geo$coords), main = paste("Gaussian Cov:", expression("Sigma^2 ="), sigma2_vec[i]))
}
gaussZ <- NULL
gaussZ <- array(0,c(n,length(sigma2_vec)))
for(i in 1:length(sigma2_vec)){
gaussZ[,i] <- mvrnorm(mu = rep(0,dim(gaussV)[1]), Sigma = as.matrix(gaussV[,,i]))
}
dim(gaussV)[1]
rep(0,dim(gaussV)[1])
gaussV
set.seed(25)
gaussZ <- NULL
gaussZ <- array(0,c(n,n,length(sigma2_vec)))
for(i in 1:length(sigma2_vec)){
gaussZ[,,i] <- mvrnorm(mu = rep(0,dim(gaussV)[1]), Sigma = as.matrix(gaussV[,,i]))
}
gaussV
n
gaussV <- array(0,c(n,n,length(sigma2_vec)))
for(i in 1:length(sigma2_vec)){
gaussV[,,i] <- gauss_cor(t = as.matrix(dist(sed.geo$data)), tau2 = 9, sigma2 = sigma2_vec[i], phi=2)
}
gaussV[1:4,1:4,1]
gaussV <- array(0,c(n,n,length(sigma2_vec)))
for(i in 1:length(sigma2_vec)){
gaussV[,,i] <- gauss_cor(t = as.matrix(dist(sed.geo$data)), tau2 = 9, sigma2 = sigma2_vec[i], phi=.2)
}
gaussV[1:4,1:4,1]
gauss_cor <- function(t,tau2,sigma2,phi){
I <- diag(1, nrow = dim(as.matrix(t))[1], ncol = dim(as.matrix(t))[2])
nonspat_var <- tau2*I
spat_var <- ifelse(as.matrix(t) > 0,
sigma2*(1-exp(-phi^2*as.matrix(t)%*%t(as.matrix(t)))),0)
spat_var <- as.matrix(spat_var)
out <- nonspat_var + spat_var
return(out)
}
gaussV <- gauss_cor(t = dist(ca$data), tau2 = 9, sigma2 = 0.1, phi = 2)
gaussV
gaussV[1]
gaussV[1:3,1:3]
gaussV[,,1] <- gauss_cor(t = as.matrix(dist(sed.geo$data)), tau2 = 1.5, sigma2 = sigma2_vec[3], phi=.2)
gaussV <- gauss_cor(t = as.matrix(dist(sed.geo$data)), tau2 = 1.5, sigma2 = sigma2_vec[3], phi=.2)
gaussV[1:4,1:4]
gaussV <- array(0,c(n,n,length(sigma2_vec)))
for(i in 1:length(sigma2_vec)){
gaussV[,,i] <- gauss_cor(t = dist(sed.geo$data), tau2 = 1.5, sigma2 = sigma2_vec[i], phi=.2)
}
gaussV[1:4,1:4,1]
gaussV <- gauss_cor(t = dist(sed.geo$data), tau2 = 1.5, sigma2 = 1, phi=2)
gaussV[1:4,1:4]
gaussV <- gauss_cor(t = dist(sed.geo$coords), tau2 = 1.5, sigma2 = .1, phi=2)
gaussV[1:4,1:4]
gaussV <- array(0,c(n,n,length(sigma2_vec)))
for(i in 1:length(sigma2_vec)){
gaussV[,,i] <- gauss_cor(t = dist(sed.geo$coords), tau2 = 1.5, sigma2 = sigma2_vec[i], phi=2)
}
gaussV[1:4,1:4]
gaussV[1:4,1:4,1]
gaussV[1:4,1:4,2]
set.seed(25)
gaussZ <- NULL
gaussZ <- array(0,c(n,length(sigma2_vec)))
for(i in 1:length(sigma2_vec)){
gaussZ[,i] <- mvrnorm(mu = rep(0,dim(gaussV)[1]), Sigma = as.matrix(gaussV[,,i]))
}
set.seed(25)
gaussZ <- NULL
gaussZ <- array(0,c(n,length(sigma2_vec)))
for(i in 1:length(sigma2_vec)){
gaussZ[,i] <- mvrnorm(mu = rep(0,dim(gaussV)[1]), Sigma = gaussV[,,i])
}
mvrnorm(mu = rep(0,dim(gaussV)[1]), Sigma = gaussV[,,1])
mvrnorm(mu = rep(0,dim(gaussV)[1]), Sigma = gaussV[,,2])
mvrnorm(mu = rep(0,dim(gaussV)[1]), Sigma = gaussV[,,3])
mvrnorm(mu = rep(0,dim(gaussV)[1]), Sigma = gaussV[,,4])
mvrnorm(mu = rep(0,dim(gaussV)[1]), Sigma = gaussV[,,5])
sigma2_vec[c(3,4)]
for(i in 1:3){
gaussZ[,i] <- mvrnorm(mu = rep(0,dim(gaussV)[1]), Sigma = gaussV[,,i])
}
par(mfrow=c(1,2))
for(i in 1:3){
plot(variog(data = gaussZ[,i], coords = sed.geo$coords), main = paste("Gaussian Cov:", expression("Sigma^2 ="), sigma2_vec[i]))
}
expV <- array(0,c(n,n,length(sigma2_vec)))
for(i in 1:length(sigma2_vec)){
expV[,,i] <- exp_cor(t = dist(ca$data), tau2 = 9, sigma2 = sigma2_vec[i], phi=2)
}
expV <- array(0,c(n,n,length(sigma2_vec)))
for(i in 1:length(sigma2_vec)){
expV[,,i] <- exp_cor(t = dist(sed.geo$coords), tau2 = 9, sigma2 = sigma2_vec[i], phi=2)
}
set.seed(25)
expZ <- array(0,c(n,length(sigma2_vec)))
for(i in 1:length(sigma2_vec)){
expZ[,i] <- mvrnorm(mu = rep(0,dim(expV)[1]), Sigma = expV[,,i])
}
par(mfrow=c(1,2))
for(i in 1:length(sigma2_vec)){
plot(variog(data = gaussZ[,i], coords = sed.geo$coords), main = paste("Exp Cov:", expression("Sigma^2 ="), sigma2_vec[i]))
}
expV[1:4,1:4,1]
expV[1:4,1:4,2]
expV[1:4,1:4,5]
par(mfrow=c(1,2))
for(i in 1:length(sigma2_vec)){
plot(variog(data = expZ[,i], coords = sed.geo$coords), main = paste("Exp Cov:", expression("Sigma^2 ="), sigma2_vec[i]))
}
?variog
?persp
persp(x=seq(0,1,length.out = length(sed.geo$data)), y=seq(0,1,length.out = length(sed.geo$data)), z=sed.geo$data)
persp(x=seq(0,1,length.out = length(sed.geo$data)), y=seq(0,1,length.out = length(sed.geo$data)), z=as.matrix(gaussV[,,1]))
persp(x=seq(0,1,length.out = length(sed.geo$data)), y=seq(0,1,length.out = length(sed.geo$data)), z=as.matrix(gaussZ[,1]))
linearZ <- mvrnorm(mu = rep(0,dim(linearV)[1]^2), Sigma = linearV[,,2])
linearV[,,2]
linearZ <- NULL
linearZ <- mvrnorm(mu = rep(0,dim(linearV)[1]^2), Sigma = linearV[,,2])
persp(x=seq(0,1,length.out = length(sed.geo$data)),y=seq(0,1,length.out = length(sed.geo$data)), z=sed.geo$data)
persp(x=seq(0,1,length.out = length(sed.geo$data)),y=seq(0,1,length.out = length(sed.geo$data)), z=sed.geo$data)
plot(variog(data = sed.geo$data, coords = sed.geo$coords), main = "Observed")
plot(variog(data = sed.geo$data, coords = sed.geo$coords), main = "Observed")
sed.geo$data
persp(x=seq(0,1,length.out = dim(sed.geo$data)[1]),y=seq(0,1,length.out = dim(sed.geo$data)[1]), z=sed.geo$data[,1])
plot(variog(data = sed.geo$data[,1], coords = sed.geo$coords), main = "Observed")
variog(data = sed.geo$data[,1], coords = sed.geo$coords)
sed.geo$data[,1]
plot(variog(data = sed.geo$data[,1], coords = sed.geo$coords, na.rm=TRUE), main = "Observed")
?variog
plot(variog(sed.geo, coords = sed.geo$coords, data=data[,1]), main = "Observed")
plot(variog(sed.geo$data[,1], coords = sed.geo$coords), main = "Observed")
sed.geo$data[,1]
plot(variog(data=sed.geo$data[,1], coords = sed.geo$coords), main = "Observed")
library(gstat)
install.packages("gstat")
library(gstat)
point_data <- as(geo.sed, 'SpatialPointsDataFrame')
point_data <- as(sed.geo, 'SpatialPointsDataFrame')
sed.miss <- which(sed.geo$data[,1] == NA)
sed.miss
sed.miss <- which(is.na(sed.geo$data[,1])
)
sed.miss
sed.geo$coords
plot(variog(data=sed.geo$data[-sed.miss,1], coords = sed.geo$coords[-sed.miss,]), main = "Observed")
?variog
plot(variog(data=sed.geo$data[-sed.miss,1], coords = sed.geo$coords[-sed.miss,]), type="b", main = "Observed")
plot(sed.geo)
plot(sed.geo[-sed.miss])
plot(sed.geo, na.action(sed.geo, "ignore"))
plot(variog4(data=sed.geo$data[-sed.miss,1], coords = sed.geo$coords[-sed.miss,]), type="b", main = "Observed")
plot(variog4(data=sed.geo$data[-sed.miss,1], coords = sed.geo$coords[-sed.miss,]), type="b", main = "Observed")
par(mfrow=c(1,1))
plot(variog4(data=sed.geo$data[-sed.miss,1], coords = sed.geo$coords[-sed.miss,]), type="b", main = "Observed")
?plot.variog4
plot.variog
?plot.variogram
plot(variog4(data=sed.geo$data[-sed.miss,1], coords = sed.geo$coords[-sed.miss,]), main = "Observed")
?plot.variog4
plot(variog4(data=sed.geo$data[-sed.miss,1], coords = sed.geo$coords[-sed.miss,]), main = "Observed", legend.placement = "topright")
plot(variog4(data=sed.geo$data[-sed.miss,1], coords = sed.geo$coords[-sed.miss,]), main = "Observed", legend.placement = "topright", legend.size = 0.5)
plot(variog4(data=sed.geo$data[-sed.miss,1], coords = sed.geo$coords[-sed.miss,]), main = "Observed", legend.placement = "topleft", legend.size = 0.25)
plot.variog4
par(mfrow=c(1,1))
plot(variog4(data=sed.geo$data[-sed.miss,1], coords = sed.geo$coords[-sed.miss,]), main = "Observed", legend("topleft", size = 0.25))
plot(variog4(data=sed.geo$data[-sed.miss,1], coords = sed.geo$coords[-sed.miss,]), main = "Observed", legend("bottom"))
plot(variog4(data=sed.geo$data[-sed.miss,1], coords = sed.geo$coords[-sed.miss,]), main = "Observed", legend.placement ="bottom")
plot(variog4(data=sed.geo$data[-sed.miss,1], coords = sed.geo$coords[-sed.miss,]), main = "Observed", legend ="bottom")
plot(variog4(data=sed.geo$data[-sed.miss,1], coords = sed.geo$coords[-sed.miss,]), main = "Observed", legend ="hide")
legend("bottom")
plot(variog(data=sed.geo$data[-sed.miss,1], coords = sed.geo$coords[-sed.miss,]), main = "Observed")
lines.variomodel(cov.model="exp", cov.pars=c(2,.3), nug=0, max.dist=1)
lines.variomodel(cov.model="exp", cov.pars=c(2,.3), nug=5, max.dist=1)
plot(variog(data=sed.geo$data[-sed.miss,1], coords = sed.geo$coords[-sed.miss,]), main = "Observed")
lines.variomodel(cov.model="exp", cov.pars=c(2,.3), nug=5)
plot(variog(data=sed.geo$data[-sed.miss,1], coords = sed.geo$coords[-sed.miss,]), main = "Observed")
lines.variomodel(cov.model="exp", cov.pars=c(2,.3), nug=5, max.dist = 10000)
lines.variomodel(cov.model="exp", cov.pars=c(2,3), nug=5, max.dist = 10000)
lines.variomodel(cov.model="mat", cov.pars=c(.85,.2), nug=0.1, kappa=1,max.dist=10000, lty=2)
lines.variomodel(cov.model="mat", cov.pars=c(.85,.2), nug=5, kappa=1,max.dist=10000, lty=2)
lines.variomodel(cov.model="sph", cov.pars=c(.8,.8), nug=5,max.dist=10000, lwd=2)
?lines.variomodel
plot(variog(data=sed.geo$data[-sed.miss,1], coords = sed.geo$coords[-sed.miss,]), main = "Observed")
lines.variomodel(x=dist(sed.geo$coords[-sed.miss,],cov.model="exp", cov.pars=c(2,3), nug=5, max.dist = 10000)
lines.variomodel(cov.model="mat", cov.pars=c(.85,.2), nug=5, kappa=1,max.dist=10000, lty=2)
lines.variomodel(cov.model="exp", cov.pars=c(7,3), nug=5, max.dist = 10000)
lines.variomodel(cov.model="exp", cov.pars=c(7,100), nug=5, max.dist = 10000)
plot(variog(data=sed.geo$data[-sed.miss,1], coords = sed.geo$coords[-sed.miss,]), main = "Observed")
lines.variomodel(cov.model="exp", cov.pars=c(7,1000), nug=5, max.dist = 10000)
lines.variomodel(cov.model="exp", cov.pars=c(2000,1000), nug=5, max.dist = 10000)
